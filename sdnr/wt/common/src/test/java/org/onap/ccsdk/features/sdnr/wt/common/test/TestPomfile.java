/*
 * ============LICENSE_START=======================================================
 * ONAP : ccsdk features
 * ================================================================================
 * Copyright (C) 2019 highstreet technologies GmbH Intellectual Property.
 * All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 *
 */
package org.onap.ccsdk.features.sdnr.wt.common.test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import javax.xml.parsers.ParserConfigurationException;
import org.junit.Test;
import org.onap.ccsdk.features.sdnr.wt.common.file.PomFile;
import org.onap.ccsdk.features.sdnr.wt.common.file.PomPropertiesFile;
import org.xml.sax.SAXException;

public class TestPomfile {

    private static final String TESTPROPERTY_KEY = "elasticsearch-rest-client.version";
    private static final String TESTPROPERTY_VALUE = "6.4.3";
    private static final String POMFILENAME = "/testpom.xml";
    private static final String POM_PROPERTY = "#Generated by org.apache.felix.bundleplugin\n"
            + "#Tue Nov 19 11:20:33 CET 2019\n" + "version=0.7.0-SNAPSHOT\n"
            + "groupId=org.onap.ccsdk.features.sdnr.wt\n" + "artifactId=sdnr-wt-data-provider-provider\n";

    @Test
    public void test() {
        PomFile pom = null;
        try {
            pom = new PomFile(this.getClass().getResourceAsStream(POMFILENAME));
        } catch (ParserConfigurationException | SAXException | IOException e) {
            fail(e.getMessage());
        }
        assertNotNull(pom);
        assertEquals(TESTPROPERTY_VALUE, pom.getProperty(TESTPROPERTY_KEY));

    }

    @Test
    public void testProp() throws IOException {
        PomPropertiesFile file = null;
        file = new PomPropertiesFile(new ByteArrayInputStream(POM_PROPERTY.getBytes()));
        assertNotNull(file);
        assertNotNull(file.getBuildDate());
    }
}

{
  "comments": [
    {
      "key": {
        "uuid": "3ae25128_0ed2e988",
        "filename": "sdnr/wt/data-provider/dblib/src/main/java/org/onap/ccsdk/features/sdnr/wt/dataprovider/database/sqldb/data/entity/DatabaseIdGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 5625
      },
      "writtenOn": "2021-10-21T12:21:37Z",
      "side": 1,
      "message": "that\u0027s not the same as the regex. The regex does not end at the line.",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff3e01b_61116eb6",
        "filename": "sdnr/wt/data-provider/dblib/src/main/java/org/onap/ccsdk/features/sdnr/wt/dataprovider/database/sqldb/data/entity/DatabaseIdGenerator.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-21T12:43:29Z",
      "side": 1,
      "message": "yes, I will rollback",
      "parentUuid": "3ae25128_0ed2e988",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30fb3494_1f451826",
        "filename": "sdnr/wt/mountpoint-registrar/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/mountpointregistrar/impl/DMaaPPNFRegVESMsgConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 6215
      },
      "writtenOn": "2021-10-21T06:47:43Z",
      "side": 1,
      "message": "We should retain the null check",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9316c54_1cafedff",
        "filename": "sdnr/wt/mountpoint-registrar/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/mountpointregistrar/impl/DMaaPPNFRegVESMsgConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-21T07:06:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30fb3494_1f451826",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b36ae35_92874a37",
        "filename": "sdnr/wt/mountpoint-registrar/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/mountpointregistrar/impl/DMaaPPNFRegVESMsgConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 6215
      },
      "writtenOn": "2021-10-21T06:47:43Z",
      "side": 1,
      "message": "We should retain the null check",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877414e3_abb8d03c",
        "filename": "sdnr/wt/mountpoint-registrar/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/mountpointregistrar/impl/DMaaPPNFRegVESMsgConsumer.java",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-21T07:06:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b36ae35_92874a37",
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38fb0563_7de23553",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/access/binding/GenericTransactionUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 4931
      },
      "writtenOn": "2021-10-20T14:12:43Z",
      "side": 1,
      "message": "This change is breaking the opendaylight cluster scenario. \nReason: The implicite close is not handled correctly by underlaying opendaylight netconf service.",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 89
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebfa72bb_f134873c",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/access/binding/GenericTransactionUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-20T14:22:59Z",
      "side": 1,
      "message": "Not sure I understand :) \nThe goald is to close readTransaction at the end. \nThe problem is only with the implicite close ? You mean, I just need to add a line \"readTransaction.close()\" for an explicite close or just we can\u0027t close readTransaction ?\n\nI also do the same on ODLEventListenerHandler :(\n\nSonar issue : https://sonarcloud.io/project/issues?id\u003donap_ccsdk-features\u0026issues\u003dAXIslx6i0PGsbkeF8ODB\u0026open\u003dAXIslx6i0PGsbkeF8ODB",
      "parentUuid": "38fb0563_7de23553",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 89
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4679cf69_60e0a72f",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/access/binding/GenericTransactionUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 4931
      },
      "writtenOn": "2021-10-20T14:52:13Z",
      "side": 1,
      "message": "I am refering to this: https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\n\nThe try(ressources) is always implicitely closing the transaction per java definition. \nBut the \"close\" in opendaylight netconf service is not correctly implemented and will terminate the read immediately. Because of this opendaylight problem this change can not be done. Or in other words the close of the transaction must never be called, because of wrong implementation. \n\nNot all Sonarqube errors or warnings make sense, because sonarqube is not knowing such specifics. Excuse me to say that ;-)",
      "parentUuid": "ebfa72bb_f134873c",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 89
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c9f1e89_828c9d4c",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/access/binding/GenericTransactionUtils.java",
        "patchSetId": 3
      },
      "lineNbr": 111,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-20T15:05:57Z",
      "side": 1,
      "message": "You are totally right :)\nNot all sonar problems have to be solved.\n\nI will rollback all my changes like this one.\n\nBut I found some case where you have already closed the transaction :\nhttps://github.com/onap/ccsdk-features/blob/c8f7e3f376992b202ba26464b9b329d6c4b2821d/sdnr/wt/data-provider/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/dataprovider/impl/DataProviderServiceImpl.java#L430\n\nAt least 4 times (not a lot) Should I also change them ?",
      "parentUuid": "4679cf69_60e0a72f",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 89
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5889cc9_8cfbc69e",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/conf/odlGeo/ClusterRoleInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 4931
      },
      "writtenOn": "2021-10-20T14:31:14Z",
      "side": 1,
      "message": "See at multiple places:\n\n\"*\" needs to be replaced with {0,1024}\nI think 1024 is a valid magnitude for the strings.\nBut the generic assumption for digits to have only 10 is risky .. should be also {0,1024}\n\nUsed Java 7 regex defintion;\nX*\t-\u003e X, zero or more times\nX{n,m}  -\u003e at least n but not more than m times\nhttps://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 64
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61c2f67b_58ae22e7",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/conf/odlGeo/ClusterRoleInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 7700
      },
      "writtenOn": "2021-10-20T14:39:25Z",
      "side": 1,
      "message": "Yes, I\u0027m agree X* is zero or more times. \nBut in this case it was maybe a mistake. \nLook at the parsing after : \"Integer.parseInt(matcher.group(2));\"\nThat will return an exception if string is empty... so maybe {1,1024} is more secure no ?\n\nBut ok to change {1,10} with {1,1024}",
      "parentUuid": "e5889cc9_8cfbc69e",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 64
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "700885e6_1b672df9",
        "filename": "sdnr/wt/netconfnode-state-service/provider/src/main/java/org/onap/ccsdk/features/sdnr/wt/netconfnodestateservice/impl/conf/odlGeo/ClusterRoleInfo.java",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 4931
      },
      "writtenOn": "2021-10-20T15:08:46Z",
      "side": 1,
      "message": "I like to describe the problem that I have: You changed a lot of places. The team here that needs to review all of this changes is small and limited. \nIf you do a syntax change that is not changing the meaning of the code I can look to it and say: Ok, this is the same like before and it is Ok. \nBut if you change the code because you think, there may be an error than we have to implicit changes .. and someone has to dive deep into it to confirm your interpretation or to say .. the change is not correct. \nI really appreciate that you care about sonarqube. But to make the review simpler, please split the change into a part that is fixing sonarqube and perhaps a second one that is doing fixes.",
      "parentUuid": "61c2f67b_58ae22e7",
      "range": {
        "startLine": 28,
        "startChar": 8,
        "endLine": 28,
        "endChar": 64
      },
      "revId": "08377c10992e972f90928943da28bc40a0fa9a4c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}